openapi: 3.0.3
info:
  title: User Management API
  description: API for managing user resources
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /api/users:
    get:
      summary: Get all users
      description: Retrieves a list of all users
      operationId: getAllUsers
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Creates a new user in the system
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          headers:
            Location:
              schema:
                type: string
              description: URL of the created user resource
        '400':
          description: Bad request - invalid input data

  /api/users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the user
        schema:
          type: integer
          format: int64
    get:
      summary: Get user by ID
      description: Retrieves a specific user by their ID
      operationId: getUserById
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found with the specified ID
    put:
      summary: Update an existing user
      description: Updates a user's information based on their ID
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found with the specified ID
        '400':
          description: Bad request - invalid input data
    delete:
      summary: Delete a user
      description: Deletes a user from the system
      operationId: deleteUser
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found with the specified ID

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          readOnly: true
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: john.doe@example.com
        fullName:
          type: string
          example: John Doe
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        active:
          type: boolean
          example: true
      required:
        - username
        - email

    UserCreate:
      type: object
      properties:
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: john.doe@example.com
        fullName:
          type: string
          example: John Doe
        active:
          type: boolean
          example: true
      required:
        - username
        - email
